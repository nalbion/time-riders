# Unity Common Build Workflow (Reusable)
# This workflow builds and tests the Unity project and exposes the build artifact for downstream workflows.

name: Unity Common Build

on:
  workflow_call:
    inputs:
      targetPlatform:
        required: true
        type: string
    secrets:
      UNITY_LICENSE:
        required: true
      UNITY_EMAIL:
        required: true
      UNITY_PASSWORD:
        required: true
    outputs:
      build-path:
        description: "Path to build output"
        value: ${{ jobs.build.outputs.build-path }}

jobs:
  testRunner:
    name: Test in ${{ matrix.testMode }} ✅
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        testMode:
          - EditMode
          - PlayMode
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      - name: Restore LFS cache
        uses: actions/cache@v4
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

      - name: Git LFS Pull
        run: |
          git lfs pull
          git add .
          git reset --hard

      - name: Restore Library cache
        uses: actions/cache@v4
        with:
          path: Library
          key: Library-test-project-${{ matrix.testMode }}
          restore-keys: |
            Library-test-project-
            Library-

      - name: Run tests
        uses: game-ci/unity-test-runner@v4
        id: testRunner
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          testMode: ${{ matrix.testMode }}
          checkName: ${{ matrix.testMode }} test results
          githubToken: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/upload-artifact@v4
        with:
          name: Test results (${{ matrix.testMode }})
          path: ${{ steps.testRunner.outputs.artifactsPath }}

  build:
    # needs: testRunner
    name: Build Unity Project 🖥️
    runs-on: ubuntu-latest
    outputs:
      build-path: ${{ steps.set-build-path.outputs.build-path }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      - name: Restore LFS cache
        uses: actions/cache@v4
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

      - name: Git LFS Pull
        run: |
          git lfs pull
          git add .
          git reset --hard

      - name: Restore Library cache
        uses: actions/cache@v4
        with:
          path: Library
          key: Library-build-${{ inputs.targetPlatform }}
          restore-keys: |
            Library-build-
            Library-

      - uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: ${{ inputs.targetPlatform }}

      # - name: Fix permissions for build output
      #   run: |
      #     sudo chown -R $USER:$USER build/${{ inputs.targetPlatform }}

      # - name: Copy static public assets (e.g., favicon)
      #   run: |
      #     if [ -d public ]; then
      #       cp -r public/* build/${{ inputs.targetPlatform }}/
      #     fi

      - name: Set build output path
        id: set-build-path
        run: echo "build-path=build/${{ inputs.targetPlatform }}" >> $GITHUB_OUTPUT

      - uses: actions/upload-artifact@v4
        with:
          name: build-${{ inputs.targetPlatform }}
          path: build/${{ inputs.targetPlatform }}
